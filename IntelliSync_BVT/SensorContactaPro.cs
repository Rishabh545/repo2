///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace IntelliSync_BVT
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The SensorContactaPro recording.
    /// </summary>
    [TestModule("f5feb16d-af76-44f2-8131-a3446e96e0ca", ModuleType.Recording, 1)]
    public partial class SensorContactaPro : ITestModule
    {
        /// <summary>
        /// Holds an instance of the IntelliSync_BVTRepository repository.
        /// </summary>
        public static IntelliSync_BVTRepository repo = IntelliSync_BVTRepository.Instance;

        static SensorContactaPro instance = new SensorContactaPro();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public SensorContactaPro()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static SensorContactaPro Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.RCTUIImageViewAnimated1' at Center", repo.ComPentairPentairhome.RCTUIImageViewAnimated1Info, new RecordItemIndex(0));
            repo.ComPentairPentairhome.RCTUIImageViewAnimated1.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(1));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.ContactAProfessional1' at Center", repo.ComPentairPentairhome.ContactAProfessional1Info, new RecordItemIndex(2));
            repo.ComPentairPentairhome.ContactAProfessional1.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(3));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.ContactAProScreenContainerView' at Center", repo.ComPentairPentairhome.ContactAProScreenContainerViewInfo, new RecordItemIndex(4));
            repo.ComPentairPentairhome.ContactAProScreenContainerView.Touch();
            Delay.Milliseconds(300);
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating Exists on item 'ComPentairPentairhome.ContactAProScreenContainerView'.", repo.ComPentairPentairhome.ContactAProScreenContainerViewInfo, new RecordItemIndex(5));
                Validate.Exists(repo.ComPentairPentairhome.ContactAProScreenContainerViewInfo, null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(5)); }
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.AssetsSrcCommonFeatureImagesIconBac1' at Center", repo.ComPentairPentairhome.AssetsSrcCommonFeatureImagesIconBac1Info, new RecordItemIndex(6));
            repo.ComPentairPentairhome.AssetsSrcCommonFeatureImagesIconBac1.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(7));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.RCTImageView1' at Center", repo.ComPentairPentairhome.RCTImageView1Info, new RecordItemIndex(8));
            repo.ComPentairPentairhome.RCTImageView1.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 300ms.", new RecordItemIndex(9));
            Delay.Duration(300, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
