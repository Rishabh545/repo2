///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace IntelliSync_BVT
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Notification11 recording.
    /// </summary>
    [TestModule("b2924d1d-d29c-4658-9080-254d711b15d7", ModuleType.Recording, 1)]
    public partial class Notification11 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the IntelliSync_BVTRepository repository.
        /// </summary>
        public static IntelliSync_BVTRepository repo = IntelliSync_BVTRepository.Instance;

        static Notification11 instance = new Notification11();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Notification11()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Notification11 Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.Notifications' at Center", repo.ComPentairPentairhome.NotificationsInfo, new RecordItemIndex(0));
            repo.ComPentairPentairhome.Notifications.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 10s.", new RecordItemIndex(1));
            Delay.Duration(10000, false);
            
            Report.Screenshot(ReportLevel.Info, "User", "AccountNotification", repo.ComPentairPentairhome.RCTRootView, false, new RecordItemIndex(2));
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 10s.", new RecordItemIndex(3));
            Delay.Duration(10000, false);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.NewsMarketing' at Center", repo.ComPentairPentairhome.NewsMarketingInfo, new RecordItemIndex(4));
            repo.ComPentairPentairhome.NewsMarketing.Touch();
            Delay.Milliseconds(300);
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating Exists on item 'ComPentairPentairhome.NewsMarketingReceiveHelpfulTipsAnd'.", repo.ComPentairPentairhome.NewsMarketingReceiveHelpfulTipsAndInfo, new RecordItemIndex(5));
                Validate.Exists(repo.ComPentairPentairhome.NewsMarketingReceiveHelpfulTipsAndInfo, null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(5)); }
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.RCTView2' at Center", repo.ComPentairPentairhome.RCTView2Info, new RecordItemIndex(6));
            repo.ComPentairPentairhome.RCTView2.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(7));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.RCTView2' at Center", repo.ComPentairPentairhome.RCTView2Info, new RecordItemIndex(8));
            repo.ComPentairPentairhome.RCTView2.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(9));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.RCTView3' at Center", repo.ComPentairPentairhome.RCTView3Info, new RecordItemIndex(10));
            repo.ComPentairPentairhome.RCTView3.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 10s.", new RecordItemIndex(11));
            Delay.Duration(10000, false);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.INTELLISYNCRD' at Center", repo.ComPentairPentairhome.INTELLISYNCRDInfo, new RecordItemIndex(12));
            repo.ComPentairPentairhome.INTELLISYNCRD.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 300ms.", new RecordItemIndex(13));
            Delay.Duration(300, false);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.RCTView4' at Center", repo.ComPentairPentairhome.RCTView4Info, new RecordItemIndex(14));
            repo.ComPentairPentairhome.RCTView4.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 10s.", new RecordItemIndex(15));
            Delay.Duration(10000, false);
            
            Report.Log(ReportLevel.Info, "Touch gestures", "Swipe gesture with direction 'Up (270°)' starting from 'Center' with distance '250' with swipe duration'800ms' and step count '0' on item 'ComPentairPentairhome.NewsMarketing1'.", repo.ComPentairPentairhome.NewsMarketing1Info, new RecordItemIndex(16));
            repo.ComPentairPentairhome.NewsMarketing1.Swipe(Location.Center, ValueConverter.ArgumentFromString<Ranorex.Core.Recorder.Touch.GestureDirection>("SwipeDirection", "Up (270°)"), ValueConverter.ArgumentFromString<Ranorex.Core.Distance>("Distance", "250"), ValueConverter.ArgumentFromString<Ranorex.Duration>("SwipeDuration", "800ms"), 0);
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.RCTView5' at Center", repo.ComPentairPentairhome.RCTView5Info, new RecordItemIndex(17));
            repo.ComPentairPentairhome.RCTView5.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 10s.", new RecordItemIndex(18));
            Delay.Duration(10000, false);
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating Exists on item 'ComPentairPentairhome.StatusEverythingOKINTELLISYNCRDAUTO'.", repo.ComPentairPentairhome.StatusEverythingOKINTELLISYNCRDAUTOInfo, new RecordItemIndex(19));
                Validate.Exists(repo.ComPentairPentairhome.StatusEverythingOKINTELLISYNCRDAUTOInfo, null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(19)); }
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.RCTView4' at Center", repo.ComPentairPentairhome.RCTView4Info, new RecordItemIndex(20));
            repo.ComPentairPentairhome.RCTView4.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 10s.", new RecordItemIndex(21));
            Delay.Duration(10000, false);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.INTELLIFLOSVRSPUMP' at Center", repo.ComPentairPentairhome.INTELLIFLOSVRSPUMPInfo, new RecordItemIndex(22));
            repo.ComPentairPentairhome.INTELLIFLOSVRSPUMP.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(23));
            Delay.Duration(5000, false);
            
            Report.Screenshot(ReportLevel.Info, "User", "IntelliFLoNotification", repo.ComPentairPentairhome.StatusEverythingOKINTELLISYNCRDAUTO, false, new RecordItemIndex(24));
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.RCTView4' at Center", repo.ComPentairPentairhome.RCTView4Info, new RecordItemIndex(25));
            repo.ComPentairPentairhome.RCTView4.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 10s.", new RecordItemIndex(26));
            Delay.Duration(10000, false);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.COOLSENSOR' at Center", repo.ComPentairPentairhome.COOLSENSORInfo, new RecordItemIndex(27));
            repo.ComPentairPentairhome.COOLSENSOR.Touch();
            Delay.Milliseconds(300);
            
            Report.Screenshot(ReportLevel.Info, "User", "Sensor", repo.ComPentairPentairhome.StatusEverythingOKINTELLISYNCRDAUTO1, false, new RecordItemIndex(28));
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.AssetsSrcCommonFeatureImagesIconBac' at Center", repo.ComPentairPentairhome.AssetsSrcCommonFeatureImagesIconBacInfo, new RecordItemIndex(29));
            repo.ComPentairPentairhome.AssetsSrcCommonFeatureImagesIconBac.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 10s.", new RecordItemIndex(30));
            Delay.Duration(10000, false);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.SUPERFLOMAXVSS' at Center", repo.ComPentairPentairhome.SUPERFLOMAXVSSInfo, new RecordItemIndex(31));
            repo.ComPentairPentairhome.SUPERFLOMAXVSS.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 10s.", new RecordItemIndex(32));
            Delay.Duration(10000, false);
            
            Report.Screenshot(ReportLevel.Info, "User", "SuperFloNotification", repo.ComPentairPentairhome.StatusEverythingOKINTELLISYNCRDAUTO2, false, new RecordItemIndex(33));
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.AssetsSrcCommonFeatureImagesIconBac' at Center", repo.ComPentairPentairhome.AssetsSrcCommonFeatureImagesIconBacInfo, new RecordItemIndex(34));
            repo.ComPentairPentairhome.AssetsSrcCommonFeatureImagesIconBac.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(35));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.AssetsSrcCommonFeatureImagesIconBac' at Center", repo.ComPentairPentairhome.AssetsSrcCommonFeatureImagesIconBacInfo, new RecordItemIndex(36));
            repo.ComPentairPentairhome.AssetsSrcCommonFeatureImagesIconBac.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.AssetsSrcCommonFeatureImagesNpHome1' at Center", repo.ComPentairPentairhome.AssetsSrcCommonFeatureImagesNpHome1Info, new RecordItemIndex(37));
            repo.ComPentairPentairhome.AssetsSrcCommonFeatureImagesNpHome1.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 10s.", new RecordItemIndex(38));
            Delay.Duration(10000, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
